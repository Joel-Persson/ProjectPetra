@using Microsoft.Owin.Security
@model PyramidPlaningSystem.Models.ExternalLoginListViewModel



<div layout-align="center center" class="outerWrapper">
    <div class="md-whiteframe-z2 customWhiteFrame " layout="column">

        <md-toolbar>
            <h1 class="welcomeHeader ieLoginHeaderText">
                Welcome
            </h1>
        </md-toolbar>

        <div layout="column" layout-align="center center" class="innerWrapper">

            <div>
                <h2 class="ieLoginTextMessage">Sign in</h2>
            </div>

            @{
                IEnumerable<AuthenticationDescription> loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
                if (loginProviders.Count() == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    using (Html.BeginForm("ExternalLogin", "Account", new { Model.ReturnUrl }))
                    {
                        @Html.AntiForgeryToken()
                        <div id="socialLoginList">
                            <p>
                                <button type="submit"
                                        class="customBtn"
                                        id="@loginProviders.Last().AuthenticationType"
                                        name="provider"
                                        value="@loginProviders.Last().AuthenticationType"
                                        title="Log in using your @loginProviders.Last().Caption account">
                                    <span class="icon"></span>
                                    <span class="buttonText">Sign in with Google</span>
                                </button>
                            </p>
                            <p>
                                <button type="submit"
                                        class=" customLinkedInBtn linkedInSpan"
                                        id="@loginProviders.First().AuthenticationType"
                                        name="provider"
                                        value="@loginProviders.First().AuthenticationType"
                                        title="Log in using your @loginProviders.First().Caption account"></button>
                            </p>
                       
                        </div>
                    }
                }
            }
        </div>
    </div>
</div>
