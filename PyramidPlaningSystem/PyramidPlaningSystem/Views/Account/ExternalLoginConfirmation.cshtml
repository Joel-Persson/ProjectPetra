@using System.ComponentModel.DataAnnotations
@using Newtonsoft.Json
@model PyramidPlaningSystem.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Register";
}

<md-toolbar style="margin-top: 8%">
    <h1>Registration</h1>
</md-toolbar>

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <form name="registrationContactForm">
        <div layout="column">
            <md-content class="md-padding" layout-align="center center">
                <p class="text-info">
                    You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
                    Please enter a user name for this site below and click the Register button to finish
                    logging in.
                </p>

                <div layout layout-sm="column">
                    <md-input-container flex>
                        <label>Firstname</label>
                        @Html.TextBoxFor(m => m.ContactInfoViewModel.Firstname)
                        @Html.ValidationMessageFor(m => m.ContactInfoViewModel.Firstname, "", new { @class = "text-danger" })
                    </md-input-container>
                    <md-input-container flex>
                        <label>Lastname</label>
                        @Html.TextBoxFor(m => m.ContactInfoViewModel.Lastname)
                    </md-input-container>
                </div>

                <div layout layout-sm="column">
                    <md-input-container flex>
                        <label>Address</label>
                        @Html.TextBoxFor(m => m.ContactInfoViewModel.Address)
                    </md-input-container>
                    <md-input-container flex>
                        <label>City</label>
                        @Html.TextBoxFor(m => m.ContactInfoViewModel.City)
                    </md-input-container>
                </div>

                <div layout layout-sm="column">
                    <md-input-container flex>
                        <label>Zip code</label>
                        @Html.TextBoxFor(m => m.ContactInfoViewModel.ZipCode)
                    </md-input-container>
                    <md-input-container flex>
                        <label>Phone</label>
                        @Html.TextBoxFor(m => m.ContactInfoViewModel.Phone)
                    </md-input-container>
                </div>

                <div layout layout-sm="column">
                    <md-input-container flex>
                        <label>Email</label>
                        @Html.TextBoxFor(m => m.Email)
                    </md-input-container>
                </div>

            </md-content>

        </div>

        <md-content class="md-padding">
            <md-button type="submit" class="md-raised md-primary">Register</md-button>
        </md-content>
    </form>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
